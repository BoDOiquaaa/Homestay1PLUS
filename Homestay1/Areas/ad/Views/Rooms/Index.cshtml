@model IEnumerable<Homestay1.Models.Room>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewData["Title"] = "Quản lý phòng";
    Layout = "_AdminLayout";
    var tokenSet = Antiforgery.GetAndStoreTokens(Context);
}
<h2>@ViewData["Title"]</h2>

<!-- AntiForgery Token -->
<input type="hidden" id="RequestVerificationToken" value="@tokenSet.RequestToken" />

<form asp-area="Ad" asp-controller="Rooms" asp-action="Index" method="get" class="form-inline mb-2">
    <input type="text" name="search" value="@ViewData["CurrentFilter"]" placeholder="Tìm kiếm phòng..." class="form-control mr-2" />
    <button type="submit" class="btn btn-primary">Tìm</button>
    <a href="@Url.Action("Create", "Rooms")" class="btn btn-success ml-auto">Thêm phòng</a>
</form>

@if (Context.Request.Query["message"] == "success")
{
    <div class="alert alert-success">Thêm phòng thành công!</div>
}
@if (Context.Request.Query["message"] == "edit-success")
{
    <div class="alert alert-success">Cập nhật phòng thành công!</div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Hình ảnh</th>
            <th>Tên phòng</th>
            <th>Giá/đêm</th>
            <th>Trạng thái</th>
            <th>Homestay</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="room-@item.RoomID">
                <td>
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" alt="Ảnh phòng" width="100" height="70" style="object-fit:cover;" />
                    }
                    else
                    {
                        <span>Không có ảnh</span>
                    }
                </td>
                <td>@item.RoomName</td>
                <td>@item.PricePerNight.ToString("C")</td>
                <td>@item.Status</td>
                <td>@item.Homestay?.Name</td>
                <td>
                    <a href="@Url.Action("Edit", "Rooms", new { area = "Ad", id = item.RoomID })" class="btn btn-sm btn-warning">Sửa</a>
                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteRoom(@item.RoomID)">Xóa</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        async function deleteRoom(id) {
            if (!confirm('Bạn có chắc muốn xóa phòng này?')) return;

            const token = document.getElementById("RequestVerificationToken").value;

            try {
                const response = await fetch(/Ad/Rooms/DeleteAjax?id=${id}, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    }
                });if (!response.ok) throw new Error('Lỗi kết nối máy chủ');

                const result = await response.json();
                if (result.success) {
                    document.getElementById(room-${id}).remove();
                } else {
                    alert('Xóa thất bại: ' + (result.error || 'Không rõ nguyên nhân'));
                }
            } catch (err) {
                alert('Lỗi hệ thống: ' + err.message);
            }
        }
    </script>
}